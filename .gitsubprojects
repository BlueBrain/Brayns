# -*- mode: cmake -*-
git_subproject(vmmlib https://github.com/Eyescale/vmmlib.git cfa6243)
git_subproject(Servus https://github.com/HBPVIS/Servus.git 36180b5)
common_find_package(Servus REQUIRED)

if(BRAYNS_NETWORKING_ENABLED OR BRAYNS_DEFLECT_ENABLED)
  git_subproject(ZeroBuf https://github.com/HBPVIS/ZeroBuf.git cea0338)
  git_subproject(ZeroEQ https://github.com/HBPVis/ZeroEQ.git 847025a)
  git_subproject(Lexis https://github.com/HBPVis/Lexis.git 2678219)
  common_find_package(ZeroEQ REQUIRED)
  common_find_package(ZeroBuf REQUIRED)
  common_find_package(Lexis REQUIRED)
endif()

# ZeroEQ and HTTP messaging
if(BRAYNS_NETWORKING_ENABLED)
  common_find_package(LibJpegTurbo REQUIRED)
endif()

# Streaming to display walls
if(BRAYNS_DEFLECT_ENABLED)
  git_subproject(Deflect https://github.com/BlueBrain/Deflect.git 24e97d7)
  common_find_package(Deflect)
endif()

# Data access
if(BRAYNS_BRION_ENABLED)
  git_subproject(Brion https://github.com/BlueBrain/Brion.git 8b0c1f1)
  git_subproject(Lunchbox https://github.com/Eyescale/Lunchbox.git 19d3790)
  common_find_package(Lunchbox)
  common_find_package(BBPTestData)
  common_find_package(Brion REQUIRED)
  common_find_package(HDF5 SYSTEM REQUIRED COMPONENTS C CXX)
endif()

# OSPRay rendering engine
if(BRAYNS_OSPRAY_ENABLED)
    common_find_package(ospray SYSTEM)
endif()

# OptiX rendering engine
if(BRAYNS_OPTIX_ENABLED)
    common_find_package(OptiX SYSTEM)
    common_find_package(CUDA SYSTEM)
endif()

# Livre rendering engine
if(BRAYNS_LIVRE_ENABLED)
  git_subproject(Livre https://github.com/BlueBrain/Livre.git c8bbc0d)
  common_find_package(Livre)
endif()

# Image processing
if(BRAYNS_IMAGEMAGICK_ENABLED)
  common_find_package(Magick++ SYSTEM)
endif()

# Mesh loading
if(BRAYNS_ASSIMP_ENABLED)
  common_find_package(assimp)
endif()
