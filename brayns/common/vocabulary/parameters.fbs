/* Copyright (c) 2015_2017, EPFL/Blue Brain Project
 * All rights reserved. Do not distribute without permission.
 * Responsible Author: Cyrille Favreau <cyrille.favreau@epfl.ch>
 *
 * This file is part of Brayns <https://github.com/BlueBrain/Brayns>
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License version 3.0 as published
 * by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110_1301 USA.
 */

namespace brayns.v1;

enum GeometryQuality: uint {
    low = 0,
    medium = 1,
    high = 2
}

enum SectionType: uint {
    soma = 1,
    axon = 2,
    dendrite = 4,
    apical_dendrite = 8,
    all = 255
}

enum ColorScheme: uint {
    none = 0,
    neuron_by_id = 1,
    neuron_by_type = 2,
    neuron_by_segment_type = 3,
    neuron_by_layer = 4,
    neuron_by_mtype = 5,
    neuron_by_etype = 6,
    protein_by_id = 7,
    protein_atoms = 8,
    protein_chain = 9,
    protein_residue = 10
}

enum SceneEnvironment: uint {
    none = 0,
    ground = 1,
    wall = 2,
    bounding_box = 3
}

table MorphologyLayout {
    nb_columns: uint;
    vertical_spacing: uint;
    horizontal_spacing: uint;
}

table DataSource {
    transfer_function_file: string;
    morphology_folder: string;
    nest_circuit: string;
    nest_report: string;
    pdb_file: string;
    pdb_folder: string;
    xyzb_file: string;
    mesh_folder: string;
    circuit_config: string;
    load_cache_file: string;
    save_cache_file: string;
    radius_multiplier: float;
    radius_correction: float;
    color_scheme: ColorScheme;
    scene_environment: SceneEnvironment;
    geometry_quality: GeometryQuality;
    target: string;
    report: string;
    non_simulated_cells: uint;
    start_simulation_time: float;
    end_simulation_time: float;
    simulation_values_range: [float:2];
    simulation_cache_file: string;
    use_simulation_model: bool;
    nest_cache_file: string;
    morphology_section_types: [SectionType];
    morphology_layout: MorphologyLayout;
    generate_multiple_models: bool;
    volume_folder: string;
    volume_file: string;
    volume_dimensions: [uint:3];
    volume_element_spacing: [float:3];
    volume_offset: [float:3];
    environment_map: string;
    molecular_system_config: string;
    metaballs_grid_size: uint;
    metaballs_threshold: float;
    metaballs_samples_from_soma: uint;
}

enum Shader: uint {
    basic,
    proximity,
    simulation,
    particle
}

enum Shading: uint {
    none,
    diffuse,
    electron,
}

enum Engine: string {
    ospray,
    optix,
    livre
}

table Settings {
    engine: Engine;
    timestamp: float;
    volume_samples_per_ray: uint;
    shader: Shader;
    samples_per_pixel: uint;
    ambient_occlusion: float;
    shadows: bool;
    soft_shadows: bool;
    shading: Shading;
    radiance: bool;
    background_color: [float:3];
    detection_distance: float;
    detection_on_different_material: bool;
    detection_near_color: [float:3];
    detection_far_color: [float:3];
    epsilon: float;
    head_light: bool;
    jpeg_size: [uint:2];
    jpeg_compression: uint;
    frame_export_folder: string;
}

table ForceRendering
{
    frame_number: uint;
}
