/* Copyright (c) 2015-2018, EPFL/Blue Brain Project
 * All rights reserved. Do not distribute without permission.
 * Responsible Author: Juan Hernando <juan.hernando@epfl.ch>
 *
 * This file is part of Brayns <https://github.com/BlueBrain/Brayns>
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License version 3.0 as published
 * by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#pragma once

#include "DefaultMaterial.ih"

/** Type of functions to return the simulation offset of a geometry primitive
 *
 * Given a base geometry, the function must return the buffer with the
 * simulation buffer offset to use for the given geometry and primitive ID. A
 * specific function pointer expect geometry of a particular type. The
 * behaviour may be undefined if the actual type of the geometry parameter is
 * not the expected one.
 */
typedef uint64 (*SimulationMaterial_GetSimulationOffset)(
    const uniform Geometry* geometry, const varying int primID);

struct SimulationMaterial
{
    uniform DefaultMaterial super;

    SimulationMaterial_GetSimulationOffset getSimulationOffset;
    bool useSimulationModel; // To dissappear once meshes carry mapping info
};
