/* Copyright (c) 2015-2016, EPFL/Blue Brain Project
 * All rights reserved. Do not distribute without permission.
 * Responsible Author: Cyrille Favreau <cyrille.favreau@epfl.ch>
 *
 * Based on OSPRay implementation
 *
 * This file is part of Brayns <https://github.com/BlueBrain/Brayns>
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License version 3.0 as published
 * by the Free Software Foundation.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
 * details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this library; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */

#pragma once

#include <ospray/SDK/common/Material.ih>
#include <ospray/SDK/math/vec.ih>
#include <ospray/SDK/texture/Texture2D.ih>
#include <ospray/SDK/texture/TextureParam.ih>
#include <ospray/SDK/volume/Volume.ih>

// Caution: This has to match the Brayns::MaterialShadingMode
enum MaterialShadingMode
{
    none,
    diffuse,
    electron
};

struct ExtendedOBJMaterial
{
    uniform Material super;

    TextureParam map_d;
    float d;
    TextureParam map_Kd;
    vec3f Kd;
    TextureParam map_Ks;
    vec3f Ks;
    TextureParam map_Ns;
    float Ns;
    TextureParam map_Bump;
    linear2f rot_Bump;
    uniform Volume* uniform volume;

    float glossiness;
    bool castSimulationData;
    TextureParam map_a;
    float a;
    TextureParam map_refraction;
    float refraction;
    TextureParam map_reflection;
    float reflection;
    MaterialShadingMode shadingMode;
};
