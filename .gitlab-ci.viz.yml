stages:
  - test
  - publish

include:
  - project: viz/ci/gitlabpipelines
    file: index.yml

ubuntu-clangformat-check:
  stage: test
  image:
    name: ubuntu:22.04
    entrypoint: [""]
  script:
    - apt update && apt install -y git clang-format-15
    - cd $CI_PROJECT_DIR
    - SOURCES=$(bash scripts/find_sources.sh)
    - clang-format-15 --dry-run --Werror $SOURCES
  rules:
    - if: $GITHUB_PULL_REQUEST_ID

.ubuntu-cpp-build:
  extends: .cmake-ubuntu
  stage: test
  variables:
    APT_PACKAGES: git libhdf5-serial-dev pkg-config wget ca-certificates libssl-dev libwebsockets-dev zlib1g-dev libbz2-dev python3.9
    CMAKE_ARGS: -DCMAKE_PREFIX_PATH=/app/dist
    KUBERNETES_CPU_LIMIT: 5
    KUBERNETES_CPU_REQUEST: 5
    KUBERNETES_MEMORY_LIMIT: 8Gi
    KUBERNETES_MEMORY_REQUEST: 8Gi
    NUM_COMPILE_JOBS: 5
    DIST_PATH: /app/dist
  before_script:
    - apt update && DEBIAN_FRONTEND=noninteractive apt install -y $APT_BASE_PACKAGES $APT_PACKAGES

    - OSPRAY_TAG=v3.1.0
    - OSPRAY_SRC=/app/ospray

    - mkdir -p ${OSPRAY_SRC}
    - git clone https://github.com/ospray/ospray.git ${OSPRAY_SRC}
    - pushd ${OSPRAY_SRC}
    - git checkout ${OSPRAY_TAG}
    - mkdir -p build
    - pushd build
    - cmake ../scripts/superbuild -DCMAKE_BUILD_TYPE=Release -DINSTALL_IN_SEPARATE_DIRECTORIES=OFF -DBUILD_GLFW=OFF -DBUILD_OIDN=OFF -DBUILD_OSPRAY_APPS=OFF -DCMAKE_INSTALL_PREFIX=${DIST_PATH}
    - cmake --build .
    - popd
    - popd

    - cd $CI_PROJECT_DIR
  rules:
    - if: $GITHUB_PULL_REQUEST_ID

ubuntu-cpp-release-build:
  extends: .ubuntu-cpp-build
  stage: test
  variables:
    CMAKE_BUILD_TYPE: Release

ubuntu-cpp-debug-build:
  extends: .ubuntu-cpp-build
  stage: test
  variables:
    CMAKE_BUILD_TYPE: Debug

docker-build:
  variables:
    KUBERNETES_CPU_LIMIT: 4
    KUBERNETES_CPU_REQUEST: 4
    KUBERNETES_MEMORY_LIMIT: 8Gi
    KUBERNETES_MEMORY_REQUEST: 8Gi
  extends: .build-image-using-kaniko
  before_script:
    # We need to overwrite CI_REGISTRY variable so it does not point to CI/CD variable:
    # "https://index.docker.io/v1/". Otherwise we run into 401 Unauthorized as
    # CI_REGISTRY_PASSWORD is a protected variable i.e. not available for regular CI jobs.
    # And as per https://gitlab.com/gitlab-org/gitlab-runner/-/issues/3555:
    # we cannot overwrite predefined CI/CD variables in "variables" section, hence the hack
    - export CI_REGISTRY=""
  rules:
    - if: $GITHUB_PULL_REQUEST_ID

docker-publish-to-dockerhub:
  variables:
    KUBERNETES_CPU_LIMIT: 4
    KUBERNETES_CPU_REQUEST: 4
    KUBERNETES_MEMORY_LIMIT: 8Gi
    KUBERNETES_MEMORY_REQUEST: 8Gi
    CI_REGISTRY_IMAGE: bluebrain/brayns
  extends: .publish-image-using-kaniko
